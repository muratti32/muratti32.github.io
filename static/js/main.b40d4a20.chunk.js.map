{"version":3,"sources":["Components/Types.js","Components/actions/index.js","Components/Page2Content.js","Components/Page2.js","Components/Page1.js","Components/MapContainer2.js","App.js","serviceWorker.js","Components/reducers/Markers.js","Components/reducers/index.js","index.js","img/addimage.png"],"names":["types","ADD","REMOVE","initialValue","Page2Content","React","useState","open","setOpen","location","useLocation","classes","useStyles","adres","useTheme","undefined","state","markerState","useSelector","markers","dispatch","useDispatch","kaydedilecekPin","setKaydedilecekPin","useEffect","console","log","geocodeByAddress","then","results","getLatLng","lat","lng","useLoadScript","id","googleMapsApiKey","libraries","isLoaded","loadError","url","style","display","flexDirection","justifyContent","Collapse","in","Alert","action","IconButton","aria-label","color","size","onClick","fontSize","alignSelf","src","logo","height","width","className","root","noValidate","autoComplete","inputStyle","borderTop","borderLeft","borderRight","onSelect","place","description","placeholder","TextField","textField","fullWidth","label","multiline","rows","Button","value","type","payload","add","variant","component","makeStyles","theme","marginTop","spacing","flexGrow","marginBottom","Page2","props","history","useHistory","goBackHandle","goBack","CssBaseline","AppBar","position","appBar","Toolbar","edge","menuButton","Typography","noWrap","drawer","breakpoints","up","flexShrink","marginLeft","marginRight","toolbar","mixins","drawerPaper","content","padding","Geocode","setApiKey","enableDebug","autocompleteStyle","top","left","right","zIndex","borderBottomLeftRadius","borderBottomRightRadius","mapContainerStyle","bottom","borderRadius","options","fullscreenControl","drawingControl","mapTypeControl","AutocompleteMemo","memo","onPlaceSelected","onMarkerDragEnd","searchedPosition","zoom","setZoom","address","city","area","mapPositionLat","mapPositionLng","markerPositionLat","markerPositionLng","setState","haritadaGosterilecekYer","setHaritadaGosterilecekYer","useMemo","formatted_address","addressArray","address_components","i","length","long_name","getCity","j","getArea","getState","latValue","geometry","lngValue","onPlaceChange1","center","onLoad","map","latLng","navigator","geolocation","getCurrentPosition","pos","coords","latitude","longitude","item","alignItems","to","pathname","textDecoration","backgroundColor","onMapLoad","fromLatLng","response","prevState","Object","assign","error","catch","err","args","draggable","onDragEnd","key","params","App","window","mobileOpen","setMobileOpen","handleDrawerToggle","Divider","List","ListItem","button","ListItemIcon","ListItemText","container","document","body","Hidden","smUp","implementation","Drawer","anchor","direction","onClose","paper","ModalProps","keepMounted","xsDown","exact","path","Page1","Boolean","hostname","match","initialState","isFull","MarkerReducer","allReducers","combineReducers","Markers","store","createStore","reducer","ReactDOM","render","StrictMode","getElementById","serviceWorker","ready","registration","unregister","message","module","exports"],"mappings":"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","file":"static/js/main.b40d4a20.chunk.js","sourcesContent":["const types = {\n    ADD:\"ADD\",\n    REMOVE:\"REMOVE\",\n}\n\nexport default types;","import types from './../Types.js'\n\n\nconst initialValue =   {}\n\n//arttırma işlemi için fonksiyon\nexport const add = (value=initialValue) => {\n    return {\n        type: types.ADD,\n        payload:value\n    }\n}\n\n//azaltma işlemi için fonksiyon\nexport const remove = (value=initialValue) => {\n    return {\n        type: types.REMOVE,\n        payload:value\n    }\n}","import React,{useEffect,useState} from 'react'\nimport logo from './../img/addimage.png';\nimport {useLocation} from 'react-router'\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Alert from '@material-ui/lab/Alert';\nimport IconButton from '@material-ui/core/IconButton';\nimport Collapse from '@material-ui/core/Collapse';\nimport CloseIcon from '@material-ui/icons/Close';\nimport GooglePlacesAutocomplete,{ geocodeByAddress, getLatLng } from 'react-google-places-autocomplete';\n\n//redux state ekleme için\nimport {add} from './actions'\n\n\nimport {useSelector,useDispatch} from 'react-redux'\n\nimport { useLoadScript } from \"@react-google-maps/api\";\nfunction Page2Content() {\n\n    const [open, setOpen] = React.useState(false);\n\n    const API_KEY = \"AIzaSyDUbZyexkygT_7ieB7oiYC3pGrahbxHzBw\";\n\n    const location = useLocation();\n    const classes = useStyles();\n    const theme = useTheme();\n\n\n    const adres = location?.state?.adres === undefined ? \"Toronto\" : location?.state?.adres\n\n    //Değişenler içer aktarılıyor\n  const markerState = useSelector(state => state.markers)\n\n  //Actionlar yani fonkisyonları kullanabilmek için dispatch oluşturuluyor\n  const dispatch = useDispatch();\n\n  const [kaydedilecekPin,setKaydedilecekPin] = useState({})\n\n\n  useEffect(() => {\n    console.log(\"state durum : \",markerState)\n  },[markerState])\n\n  useEffect(() => {\n    \n    geocodeByAddress(adres)\n    .then(results => getLatLng(results[0]))\n    .then(({ lat, lng }) =>{\n        console.log('Successfully got latitude and longitude', { lat, lng })\n        setKaydedilecekPin({lat: lat, lng: lng })\n        }\n    );\n  },[])\n\n    console.log(adres)\n\n    const autocompleteStyle = {\n        height:45,\n        width: \"100%\",\n        borderTop:0,\n        borderLeft:0,\n        borderRight:0,\n    };\n\n    const handleButtonClick = () => {\n        dispatch(add(kaydedilecekPin))\n        setOpen(true);\n\n    }\n\n    \n    const libraries = [\"places\"];\n\n\n    const onPlaceChange =(place) => {\n  \n        geocodeByAddress(place.description)\n        .then(results => getLatLng(results[0]))\n        .then(({ lat, lng }) =>{\n            console.log('Successfully got latitude and longitude', { lat,lng })\n            setKaydedilecekPin({lat: lat,lng: lng })\n            }\n        );\n\n    \n    };\n\n\n\nconst { isLoaded, loadError, url } = useLoadScript({\n    id: \"map\",\n    googleMapsApiKey: API_KEY,\n    libraries\n    });\n    \n\n//    console.log(\"isLoaded: \", isLoaded, \" loadError: \", loadError, \" url: \", url);\n\n    return (\n            <div style={{\n                display: 'flex',\n                flexDirection: 'column',\n                justifyContent: 'center',\n            }}>\n            \n            <Collapse in={open}>\n                <Alert\n                action={\n                    <IconButton\n                    aria-label=\"close\" color=\"inherit\"\n                    size=\"small\"\n                    onClick={() => {\n                        setOpen(false);\n                    }}\n                    >\n                    <CloseIcon fontSize=\"inherit\" />\n                    </IconButton>\n                }\n                >\n                Successfully added property location!\n                </Alert>\n            </Collapse>\n                \n            <img style={{alignSelf:\"center\",}} src={logo} height=\"80\" width=\"80\"/>\n            \n            <form className={classes.root} noValidate autoComplete=\"off\">\n                <div>Property Adress</div>\n                <GooglePlacesAutocomplete\n                    inputStyle={autocompleteStyle}\n                    onSelect={onPlaceChange}\n                    initialValue={adres}\n                    placeholder=\"Property Adress\"\n                />\n                <TextField className={classes.textField} id=\"outlined-basic\" fullWidth placeholder=\"Your property title\" label=\"Property Title\" />\n                <TextField className={classes.textField} id=\"outlined-basic\" fullWidth placeholder=\"Enter your notes here\"   multiline\n           rows={4} label=\"Describe more about property\"/>\n            </form>\n       \n\n            <Button onClick={handleButtonClick} variant=\"contained\" color=\"primary\" component=\"span\">\n                Add Pin\n            </Button>\n    \n        </div>\n    )\n}\n\nexport default Page2Content\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      display: 'flex',\n      flexDirection: 'column',\n      width: '100%',\n      '& > * + *': {\n        marginTop: theme.spacing(2),\n      },\n    },\n\n\n    textField: {\n      flexGrow: 1,\n      marginBottom: theme.spacing(3),\n    },\n  }));\n  ","import React,{useState} from 'react';\nimport { SwipeableDrawer, Button } from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Divider from '@material-ui/core/Divider';\nimport Drawer from '@material-ui/core/Drawer';\nimport Hidden from '@material-ui/core/Hidden';\nimport IconButton from '@material-ui/core/IconButton';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MailIcon from '@material-ui/icons/Mail';\nimport MenuIcon from '@material-ui/icons/ArrowBack';\nimport InsertPhoto from '@material-ui/icons/InsertPhoto';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport {useHistory} from 'react-router'\n\nimport {Route,Link} from 'react-router-dom'\nimport Page2Content from './Page2Content'\nconst drawerWidth = 220;\n\nfunction Page2(props) {\n  const classes = useStyles();\n  const theme = useTheme();\n\n  \n  const history = useHistory();\n\n  const handleDrawerToggle = () => {\n    goBackHandle()\n  };\n\n  const goBackHandle = () => {\n    history.goBack();\n}\n\n  \n\n \n  return (\n    <>\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar position=\"fixed\" className={classes.appBar}>\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            edge=\"start\"\n            onClick={handleDrawerToggle}\n            className={classes.menuButton}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" noWrap>\n            Logo\n          </Typography>\n        </Toolbar>\n      </AppBar>\n    </div>\n     <Page2Content />\n    </>\n  );\n}\n\nPage2.propTypes = {\n  /**\n   * Injected by the documentation to work in an iframe.\n   * You won't need it on your project.\n   */\n  window: PropTypes.func,\n};\n\n\nexport default Page2\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  drawer: {\n    [theme.breakpoints.up('sm')]: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n  },\n  appBar: {\n    [theme.breakpoints.up('sm')]: {\n      width: `calc(100% - ${drawerWidth}px)`,\n      marginLeft: drawerWidth,\n    },\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up('sm')]: {\n      display: 'none',\n    },\n  },\n  // necessary for content to be below app bar\n  toolbar: theme.mixins.toolbar,\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n  },\n}));\n\n","import React,{useState,useEffect} from \"react\";\n// import {\n//   withGoogleMap,\n//   GoogleMap,\n//   withScriptjs,\n//   Marker\n// } from \"react-google-maps\";\n\nimport { useLoadScript, GoogleMap, Marker } from \"@react-google-maps/api\";\nimport Geocode from \"react-geocode\";\nimport Autocomplete from \"react-google-autocomplete\";\nimport Button from '@material-ui/core/Button';\nimport {Route,Link} from 'react-router-dom'\nimport {useSelector,useDispatch} from 'react-redux'\n\nconst API_KEY = \"AIzaSyDUbZyexkygT_7ieB7oiYC3pGrahbxHzBw\";\n\nGeocode.setApiKey(API_KEY);\nGeocode.enableDebug();\n\n\n\nconst defaultLat = 43.7868;\nconst defaultLng = -79.44;\n\nconst autocompleteStyle = {\n    position: \"absolute\",\n    top: 70,\n    left: 20,\n    right:0,\n    zIndex: 2,\n    height:45,\n    width: \"90%\",\n    borderBottomLeftRadius : `0.7em` ,\n    borderBottomRightRadius : `0.7em` ,\n};\n\nexport const mapContainerStyle = {\n    position: \"absolute\",\n    top: 50,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    zIndex: 1,\n    borderRadius: `0.5em` \n};\n\n\n\nconst options = {\n    fullscreenControl: false,\n    drawingControl: false,\n    mapTypeControl: false,\n  }\n\nfunction getCity(addressArray) {\nlet city = \"\";\n\nfor (let i = 0; i < addressArray.length; i++) {\nif (\n    addressArray[i].types[0] &&\n    addressArray[i].types[0] === \"administrative_area_level_1\"\n) {\n    city = addressArray[i].long_name;\n\n    return city;\n}\n}\n\nreturn false;\n}\n\nfunction getArea(addressArray) {\nlet area = \"\";\nfor (let i = 0; i < addressArray.length; i++) {\nif (addressArray[i].types[0]) {\n    for (let j = 0; j < addressArray[i].types.length; j++) {\n    if (\n        addressArray[i].types[j] === \"sublocality_level_1\" ||\n        addressArray[i].types[j] === \"locality\"\n    ) {\n        area = addressArray[i].long_name;\n        return area;\n    }\n    }\n}\n}\nreturn false;\n}\n\nfunction getState(addressArray) {\nlet state = \"\";\nfor (let i = 0; i < addressArray.length; i++) {\nfor (i = 0; i < addressArray.length; i++) {\n    if (\n    addressArray[i].types[0] &&\n    addressArray[i].types[0] === \"administrative_area_level_1\"\n    ) {\n    state = addressArray[i].long_name;\n    return state;\n    }\n}\n}\nreturn false;\n}\n\nconst AutocompleteTest = ({ onPlaceSelected }) => {\nreturn (\n<Autocomplete\n    style={autocompleteStyle}\n    onPlaceSelected={onPlaceSelected}\n    types={[]}\n/>\n);\n};\n\nconst libraries = [\"places\"];\n\nconst AutocompleteMemo = React.memo(AutocompleteTest);\n\n\n\n\n\nfunction Map({ onMarkerDragEnd }) {\n\n    const onMapLoad = map => {\n        const koordinat = markerState.latLng[markerState.latLng.length - 1];\n        if(koordinat !== undefined){\n            setHaritadaGosterilecekYer(markerState.latLng[markerState.latLng.length - 1]);\n            console.log(\"on map load\",haritadaGosterilecekYer)\n\n        }else{\n            if (navigator.geolocation) {\n                navigator.geolocation.getCurrentPosition(function(position) {\n                  var pos = {\n                    lat: position.coords.latitude,\n                    lng: position.coords.longitude\n                  };\n                  setHaritadaGosterilecekYer(pos)\n             \n                });\n              }else {\n                var pos = {\n                    lat: defaultLat,\n                    lng: defaultLng\n                  };\n                  setHaritadaGosterilecekYer(pos)\n              } \n              console.log(\"haritadaGosterilecekYer useeffect başlangıç :\",haritadaGosterilecekYer)\n        }\n\n    };\n\n\nconst markerState = useSelector(state => state.markers)\n\n\nconst [clickedPosition,setClickedPosition] = useState({})\nconst [searchedPosition,setSearchedPosition] = useState(\"Toronto\")\nconst [zoom,setZoom] = useState(12)\nconst [state, setState] = React.useState({\n    address: \"\",\n    city: \"\",\n    area: \"\",\n    state: \"\",\n    mapPositionLat: defaultLat,\n    mapPositionLng: defaultLng,\n    markerPositionLat: defaultLat,\n    markerPositionLng: defaultLng\n    });\n\nconst onClick = (...args) => {\n    setClickedPosition({lat: args[0].latLng.lat(),lng: args[0].latLng.lng()})\n\n        // setState(prevState => ({\n        //     ...prevState,\n        //     markerPositionLat: args[0].latLng.lat(),\n        //     markerPositionLng: args[0].latLng.lng()           \n        // }))\n};\n\n\nconst { isLoaded, loadError, url } = useLoadScript({\nid: \"map\",\ngoogleMapsApiKey: API_KEY,\nlibraries\n});\n\n//console.log(\"isLoaded: \", isLoaded, \" loadError: \", loadError, \" url: \", url);\n\n\n\nconst [haritadaGosterilecekYer,setHaritadaGosterilecekYer] = useState({lat: 43.7868, lng: -79.44 });\nuseEffect(() => {\n    setHaritadaGosterilecekYer({lat: state.mapPositionLat,lng:state.mapPositionLng})\n    console.log(\"use effect state\",haritadaGosterilecekYer)\n\n},[state])\n\nuseEffect(() => {\n    console.log(\"useeffect haritadaGosterilecekYer \",haritadaGosterilecekYer)\n\n},[haritadaGosterilecekYer])\n\nuseEffect(() => {\n \n\n},[])\n\n\nconst onPlaceChange1 =(place) => {\n    const address = place.formatted_address;\n\n    const addressArray = place.address_components;\n    \n    const city = getCity(addressArray);\n    const area = getArea(addressArray);\n    \n    const state = getState(addressArray);\n    const latValue = place.geometry.location.lat();\n    const lngValue = place.geometry.location.lng();\n\n\n    setState({\n        address: address || \"\",\n        area: area || \"\",\n        city: city || \"\",\n        state: state || \"\",\n        markerPositionLat: latValue,\n        markerPositionLng: lngValue,\n        mapPositionLat: latValue,\n        mapPositionLng: lngValue\n    });\n\n    setZoom(15)\n};\n\n\nconst moveMarker = (params) => {\n    setClickedPosition({lat: params.latLng.lat(),lng: params.latLng.lng()})\n    // setState(prevState => ({\n    //     ...prevState,\n    //     markerPositionLat: params.latLng.lat(),\n    //     markerPositionLng: params.latLng.lng()           \n    // }))\n}\n\n\n\nconst center = React.useMemo(\nfunction memo() {\n    return {\n    lat: state.markerPositionLat,\n    lng: state.markerPositionLng\n    };\n},\n[state.markerPositionLat, state.markerPositionLng]\n);\n\nconst buttonStyle = {\n    position: \"absolute\",\n  \n    bottom: 50,\n    left: 0,\n    right:0,\n    zIndex: 2,\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center'\n};\n\n\nreturn isLoaded ? (\n        <div>\n            <AutocompleteMemo onPlaceSelected={(place) => {onPlaceChange1(place); }}  />\n            <GoogleMap\n                id=\"bicycling-example\"\n                mapContainerStyle={mapContainerStyle}\n                options={options}\n                zoom={zoom}\n                center={haritadaGosterilecekYer}\n                //onClick={onClick}\n                onLoad={onMapLoad}\n            >\n                {\n                    markerState.latLng.map(item => ( \n                    <Marker  position={{lat: item.lat, lng: item.lng}} />\n                    ))\n                }\n        \n        {/* <Marker draggable onDragEnd={(key) => {    moveMarker(key)}} position={{lat: item.lat, lng: item.lng}} /> */}\n\n        </GoogleMap>\n        <div style={buttonStyle}>\n        <Link to={\n            {\n                pathname: \"/Page2\",\n                state : {\n                    adres : searchedPosition\n                }\n            }\n        }  style={{ textDecoration: 'none' }}\n        > \n            <Button\n            style={{  backgroundColor:\"#d70427\", color:\"white\",borderRadius:20}}\n            variant=\"contained\"\n            >POST YOUR AD</Button>\n            </Link>\n        </div>\n        \n\n        </div>\n    ) : (\n    <div>Loading</div>\n);\n}\n\nexport default React.memo(Map);\n","import React,{useState,useEffect} from \"react\";\n// import {\n//   withGoogleMap,\n//   GoogleMap,\n//   withScriptjs,\n//   Marker\n// } from \"react-google-maps\";\n\nimport { useLoadScript, GoogleMap, Marker } from \"@react-google-maps/api\";\nimport Geocode from \"react-geocode\";\nimport Autocomplete from \"react-google-autocomplete\";\nimport Button from '@material-ui/core/Button';\n\nconst API_KEY = \"AIzaSyDUbZyexkygT_7ieB7oiYC3pGrahbxHzBw\";\n\nGeocode.setApiKey(API_KEY);\nGeocode.enableDebug();\n\nconst defaultLat = 55.686757;\nconst defaultLng = 21.157926;\n\nconst autocompleteStyle = {\n    position: \"absolute\",\n    top: 70,\n    left: 20,\n    right:0,\n    zIndex: 2,\n    height:45,\n    width: \"90%\",\n    borderBottomLeftRadius : `0.7em` ,\n    borderBottomRightRadius : `0.7em` ,\n};\n\nexport const mapContainerStyle = {\n    position: \"absolute\",\n    top: 50,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    zIndex: 1,\n    borderRadius: `0.5em` \n};\n\n\n\nconst options = {\n    fullscreenControl: false,\n    drawingControl: false,\n    mapTypeControl: false,\n  }\n\nfunction getCity(addressArray) {\nlet city = \"\";\n\nfor (let i = 0; i < addressArray.length; i++) {\nif (\n    addressArray[i].types[0] &&\n    addressArray[i].types[0] === \"administrative_area_level_1\"\n) {\n    city = addressArray[i].long_name;\n\n    return city;\n}\n}\n\nreturn false;\n}\n\nfunction getArea(addressArray) {\nlet area = \"\";\nfor (let i = 0; i < addressArray.length; i++) {\nif (addressArray[i].types[0]) {\n    for (let j = 0; j < addressArray[i].types.length; j++) {\n    if (\n        addressArray[i].types[j] === \"sublocality_level_1\" ||\n        addressArray[i].types[j] === \"locality\"\n    ) {\n        area = addressArray[i].long_name;\n        return area;\n    }\n    }\n}\n}\nreturn false;\n}\n\nfunction getState(addressArray) {\nlet state = \"\";\nfor (let i = 0; i < addressArray.length; i++) {\nfor (i = 0; i < addressArray.length; i++) {\n    if (\n    addressArray[i].types[0] &&\n    addressArray[i].types[0] === \"administrative_area_level_1\"\n    ) {\n    state = addressArray[i].long_name;\n    return state;\n    }\n}\n}\nreturn false;\n}\n\nconst AutocompleteTest = ({ onPlaceSelected }) => {\nreturn (\n<Autocomplete\n    style={autocompleteStyle}\n    onPlaceSelected={onPlaceSelected}\n    types={[]}\n/>\n);\n};\n\nconst libraries = [\"places\"];\n\nconst AutocompleteMemo = React.memo(AutocompleteTest);\n\n\n\n\nconst onMapLoad = map => {\n //console.log(\"map: \", map);\n};\n\nfunction Map({ onMarkerDragEnd }) {\n\nconst [state, setState] = React.useState({\n    address: \"\",\n    city: \"\",\n    area: \"\",\n    state: \"\",\n    mapPositionLat: defaultLat,\n    mapPositionLng: defaultLng,\n    markerPositionLat: defaultLat,\n    markerPositionLng: defaultLng\n    });\n\nconst onClick = (...args) => {\n        setState(prevState => ({\n            ...prevState,\n            markerPositionLat: args[0].latLng.lat(),\n            markerPositionLng: args[0].latLng.lng()           \n        }))\n};\n\n\nconst { isLoaded, loadError, url } = useLoadScript({\nid: \"map\",\ngoogleMapsApiKey: API_KEY,\nlibraries\n});\n\n//console.log(\"isLoaded: \", isLoaded, \" loadError: \", loadError, \" url: \", url);\n\nReact.useEffect(function onMount() {\nGeocode.fromLatLng(state.mapPositionLat, state.mapPositionLng)\n    .then(\n    response => {\n        const address = response.results[0].formatted_address;\n\n        const addressArray = response.results[0].address_components;\n\n        const city = getCity(addressArray);\n\n        const area = getArea(addressArray);\n\n        const state = getState(addressArray);\n\n        setState(function set(prevState) {\n        return Object.assign({}, prevState, {\n            address: address || \"\",\n            area: area || \"\",\n            city: city || \"\",\n            state: state || \"\"\n        });\n        });\n    },\n    error => {\n        console.error(error);\n    }\n    )\n    .catch(function error(err) {\n    console.log(err);\n    });\n}, []);\n\n\nconst [haritadaGosterilecekYer,setHaritadaGosterilecekYer] = useState({lat: 43.7868, lng: -79.44 });\nuseEffect(() => {\n    setHaritadaGosterilecekYer({lat: state.mapPositionLat,lng:state.mapPositionLng})\n},[state])\n\n\n\n\nconst onPlaceChange1 =(place) => {\n    const address = place.formatted_address;\n    const addressArray = place.address_components;\n    \n    const city = getCity(addressArray);\n    const area = getArea(addressArray);\n    \n    const state = getState(addressArray);\n    const latValue = place.geometry.location.lat();\n    const lngValue = place.geometry.location.lng();\n\n\n    setState({\n        address: address || \"\",\n        area: area || \"\",\n        city: city || \"\",\n        state: state || \"\",\n        markerPositionLat: latValue,\n        markerPositionLng: lngValue,\n        mapPositionLat: latValue,\n        mapPositionLng: lngValue\n    });\n\n};\n\nconst moveMarker = (params) => {\n    setState(prevState => ({\n        ...prevState,\n        markerPositionLat: params.latLng.lat(),\n        markerPositionLng: params.latLng.lng()           \n    }))\n}\n\n\n\nconst center = React.useMemo(\nfunction memo() {\n    return {\n    lat: state.markerPositionLat,\n    lng: state.markerPositionLng\n    };\n},\n[state.markerPositionLat, state.markerPositionLng]\n);\n\nconst buttonStyle = {\n    position: \"absolute\",\n  \n    bottom: 50,\n    left: 0,\n    right:0,\n    zIndex: 2,\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center'\n};\n\nreturn isLoaded ? (\n        <div>\n            <AutocompleteMemo onPlaceSelected={(place) => {onPlaceChange1(place); }}  />\n            <GoogleMap\n                id=\"bicycling-example\"\n                mapContainerStyle={mapContainerStyle}\n                options={options}\n                zoom={12}\n                center={haritadaGosterilecekYer}\n                onClick={onClick}\n                onLoad={onMapLoad}\n            >\n            <Marker draggable onDragEnd={(key) => {    moveMarker(key)}} position={center} />\n        </GoogleMap>\n        <div style={buttonStyle}>\n            <Button style={{  backgroundColor:\"#d70427\", color:\"white\",borderRadius:20}} variant=\"contained\" >POST YOUR AD</Button>\n        </div>\n        \n\n        </div>\n    ) : (\n    <div>Loading</div>\n);\n}\n\nexport default React.memo(Map);\n","import React,{useState} from 'react';\nimport './App.css';\nimport { SwipeableDrawer, Button } from '@material-ui/core';\n\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Divider from '@material-ui/core/Divider';\nimport Drawer from '@material-ui/core/Drawer';\nimport Hidden from '@material-ui/core/Hidden';\nimport IconButton from '@material-ui/core/IconButton';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MailIcon from '@material-ui/icons/Mail';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\n\nimport {Route,Link} from 'react-router-dom'\n\nimport Page2 from './Components/Page2';\nimport Page1 from './Components/Page1';\n\nimport Map from './Components/MapContainer2'\nconst drawerWidth = 220;\n\n\nfunction App(props) {\n  const { window } = props;\n  const classes = useStyles();\n  const theme = useTheme();\n  const [mobileOpen, setMobileOpen] = React.useState(false);\n\n\n\n  const handleDrawerToggle = () => {\n    setMobileOpen(!mobileOpen);\n  };\n\n  const getItem = () => {\n    return(\n      <Link to=\"/Page2\"> Page2 </Link>\n    )\n  }\n  \n  const drawer = (\n    <div>\n      <div className={classes.toolbar} />\n      <Divider />\n      <List>\n        <ListItem button key={\"Page 1\"}>\n              <ListItemIcon>{<InboxIcon />}</ListItemIcon>\n              <ListItemText >\n              <Link to=\"/\"  style={{ textDecoration: 'none' }}> Page1 </Link>\n              </ListItemText>\n              \n        </ListItem>\n        <ListItem button key={\"Page 2\"}>\n        <ListItemIcon>{<MailIcon />}</ListItemIcon>\n          <ListItemText >\n                <Link to=\"/Page2\"  style={{ textDecoration: 'none' }}> Page2 </Link>\n          </ListItemText>\n              \n        </ListItem>\n      </List>\n      <Divider />\n      \n    </div>\n  );\n\n  const container = window !== undefined ? () => window().document.body : undefined;\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar position=\"fixed\" className={classes.appBar}>\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            edge=\"start\"\n            onClick={handleDrawerToggle}\n            className={classes.menuButton}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" noWrap>\n            Logo\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <nav className={classes.drawer} aria-label=\"mailbox folders\">\n     \n        <Hidden smUp implementation=\"css\">\n          <Drawer\n            container={container}\n            variant=\"temporary\"\n            anchor={theme.direction === 'rtl' ? 'right' : 'left'}\n            open={mobileOpen}\n            onClose={handleDrawerToggle}\n            classes={{\n              paper: classes.drawerPaper,\n            }}\n            ModalProps={{\n              keepMounted: true, // Better open performance on mobile.\n            }}\n          >\n            {drawer}\n          </Drawer>\n        </Hidden>\n        <Hidden xsDown implementation=\"css\">\n          <Drawer\n            classes={{\n              paper: classes.drawerPaper,\n            }}\n            variant=\"permanent\"\n            open\n          >\n            {drawer}\n          </Drawer>\n        </Hidden>\n      </nav>\n      <main className={classes.content}>\n        <div className={classes.toolbar} />\n        <Route exact path=\"/\" component={Page1}/>\n        <Route exact path=\"/Page2\" component={Page2}/>\n      </main>\n    </div>\n  );\n}\n\nApp.propTypes = {\n  /**\n   * Injected by the documentation to work in an iframe.\n   * You won't need it on your project.\n   */\n  window: PropTypes.func,\n};\n\n\nexport default App;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  drawer: {\n    [theme.breakpoints.up('sm')]: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n  },\n  appBar: {\n    [theme.breakpoints.up('sm')]: {\n      width: `calc(100% - ${drawerWidth}px)`,\n      marginLeft: drawerWidth,\n    },\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up('sm')]: {\n      display: 'none',\n    },\n  },\n  // necessary for content to be below app bar\n  toolbar: theme.mixins.toolbar,\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n  },\n}));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","\nimport types from './../Types'\n\n\nconst initialState = \n    {\n        isFull : false,\n        latLng : []\n    }\n\nconst MarkerReducer = (state=initialState, action) => {\n    \n    switch(action.type) {\n        case types.ADD:\n            console.log(\"reducer \",action)\n            return Object.assign({}, state, {\n                latLng: [\n                  ...state.latLng,\n                  {\n                    lat: action.payload.lat,\n                    lng: action.payload.lng\n                  }\n                ]\n              })\n        case types.REMOVE:\n            return state-action.payload;\n        default : return state;\n    }\n}\n\nexport default MarkerReducer;","import Markers from './Markers'\nimport {combineReducers} from 'redux'\n\nconst allReducers = combineReducers({\n    markers : Markers,\n})\n\nexport default allReducers;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from 'react-router-dom';\nimport {Provider} from 'react-redux'\nimport {createStore} from 'redux'\nimport reducer from './Components/reducers'\n\nconst store = createStore(reducer);\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <React.StrictMode>\n        <App />\n      </React.StrictMode>\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/addimage.ce30cbd6.png\";"],"sourceRoot":""}